---
import { useSanityClient } from "astro-sanity";
import GrainOne from "@/components/UI/Grain/GrainOne.astro";
import Layout from "@/layouts/Layout.astro";
import { Image } from "@astrojs/image/components";
import StackVerticalScene from "@/components/UI/Backgrounds/StackVerticalScene.astro";

const eventos = await useSanityClient().fetch(
  `*[_type == "calendarioLudico" && start < now()]  | order(start asc)`
);

const eventosFuturos = await useSanityClient().fetch(
  `*[_type == "calendarioLudico" && start > now()]  | order(start asc)`
);

import {
  formattedDate,
  formattedTime,
  formattedDateGetDay,
} from "@/lib/formatCalendarDateTime";
---

<Layout title="Agendate">
  <div
    class="relative flex overflow-hidden items-center justify-center py-24 to-indigo-600 md:py-12 bg-gradient-to-tr from-blue-400"
  >
    <div
      class="relative w-full z-20 text-center flex justify-between items-center max-w-7xl font-sans text-white animate__fadeIn animate__animated"
    >
      <h1 class="text-4xl md:text-6xl font-sans">Agendate</h1>
      <a href="/calendario-ludico" class="btn yellow"> Ver calendario lúdico</a>
    </div>
    <div class="absolute inset-0 z-10 opacity-90">
      <GrainOne />
    </div>
    <div class="absolute inset-0 opacity-90">
      <StackVerticalScene />
    </div>
  </div>
  <div class="bg-gray-100">
    <div class="grid  gap-6 max-w-7xl w-full pt-6 mx-auto">
      <div class="">
        <h2 class="font-sans text-3xl font-bold pb-6 text-amber-600">Próximos eventos</h2>
        {
          eventosFuturos && (
            <div class="NewsGrid grid w-full gap-6 px-3 pb-24 mx-auto md:grid-cols-2 md:px-0 ">
              {eventosFuturos.map((item: any) => (
                <a
                  href={`/agendate/${item.slug?.current}`}
                  class="overflow-hidden animate__fadeIn animate__animated animate__slower duration-500 rounded-lg shadow-md bg-gray-50 hover:shadow-2xl flex"
                >
                  <div class="h-32 w-32 bg-gradient-to-br from-slate-50 to-slate-200">
                    {item.image && (
                      <Image
                        src={item.image?.secure_url}
                        alt={item.title}
                        width={500}
                        height={500}
                        class="h-64 object-cover w-full"
                      />
                    )}
                  </div>
                  <div class="p-3 flex justify-start flex-col items-start">
                    <h2 class="font-sans font-semibold text-lg">{item.title}</h2>
                    <p>{formattedTime(item.start)}</p>
                    <p>{formattedDate(item.start)}</p>
                  </div>
                </a>
              ))}
            </div>
          )
        }
      </div>
      <div class=" ">
        <div class="top-24 sticky p-3">
          <h2 class="font-hand text-3xl">Eventos pasados</h2>
        {
          eventos && (
            <div class="NewsGrid grid w-full gap-6 px-3 pb-24 mx-auto md:px-0">
              {eventos.map((item: any) => (
                <a
                  href={`/agendate/${item.slug?.current}`}
                  class="overflow-hidden animate__fadeIn animate__animated animate__slower duration-500 rounded-lg shadow-md bg-gray-50 hover:shadow-2xl"
                >
                  <div class="p-3 flex justify-between flex-col items-start">
                    <h2 class="font-sans font-semibold text-lg">{item.title}</h2>
                    <p>{formattedTime(item.start)}</p>
                    <p>{formattedDate(item.start)}</p>
                  </div>
                </a>
              ))}
            </div>
          )
        }
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  .NewsGrid a:nth-child(1) {
    animation-delay: 0.1s;
  }
  .NewsGrid a:nth-child(2) {
    animation-delay: 0.2s;
  }
  .NewsGrid a:nth-child(3) {
    animation-delay: 0.3s;
  }
  .NewsGrid a:nth-child(4) {
    animation-delay: 0.4s;
  }
  .NewsGrid a:nth-child(5) {
    animation-delay: 0.5s;
  }
  .NewsGrid a:nth-child(6) {
    animation-delay: 0.6s;
  }
</style>
