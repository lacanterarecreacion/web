---
import { useSanityClient } from "astro-sanity";
import GrainOne from "@/components/UI/Grain/GrainOne.astro";
import Layout from "@/layouts/Layout.astro";
import { Image } from "@astrojs/image/components";
import StackVerticalScene from "@/components/UI/Backgrounds/StackVerticalScene.astro";

const eventos = await useSanityClient().fetch(
  `*[_type == "calendarioLudico"]  | order(publishedAt desc)`
);
---

<Layout title="Agendate">
  <div
    class="relative flex overflow-hidden items-center justify-center py-24 to-orange-600 md:py-12 bg-gradient-to-tr from-orange-400"
  >
    <div
      class="relative w-full  z-10 text-center max-w-7xl font-sans text-white animate__fadeIn animate__animated"
    >
      <h1 class="text-4xl md:text-6xl font-sans mb-2">Agendate</h1>
      <p class="font-sans md:text-lg">
        Eventos presenciales y virtuales.
      </p>
      <a href="/calendario-ludico" class="btn mt-6">
        Ver calendario l√∫dico
      </a>
    </div>
    <div class="absolute inset-0 z-0 opacity-20">
      <GrainOne />
    </div>
    <div class="absolute inset-0 opacity-60">
      <StackVerticalScene />
    </div>
  </div>
  {
    eventos && (
      <div class="NewsGrid grid w-full gap-6 px-3 pb-24 mx-auto mt-12 md:px-0 max-w-7xl sm:grid-cols-2 lg:grid-cols-3">
        {eventos.map((item: any) => (
          <a
            href={`/agendate/${item.slug?.current}`}
            class="overflow-hidden animate__fadeIn animate__animated animate__slower duration-500 rounded-lg shadow-md bg-gray-50 hover:shadow-2xl"
          >
            <Image
              src={item.image.secure_url}
              alt=""
              width={500}
              height={500}
              class="h-64 object-cover w-full"
            />

            <div class="p-3 ">
              <h2 class="font-sans font-semibold text-lg">{item.title}</h2>
            </div>
          </a>
        ))}
      </div>
    )
  }
</Layout>

<style>
  .NewsGrid a:nth-child(1) {
    animation-delay: 0.1s;
  }
  .NewsGrid a:nth-child(2) {
    animation-delay: 0.2s;
  }
  .NewsGrid a:nth-child(3) {
    animation-delay: 0.3s;
  }
  .NewsGrid a:nth-child(4) {
    animation-delay: 0.4s;
  }
  .NewsGrid a:nth-child(5) {
    animation-delay: 0.5s;
  }
  .NewsGrid a:nth-child(6) {
    animation-delay: 0.6s;
  }
</style>
