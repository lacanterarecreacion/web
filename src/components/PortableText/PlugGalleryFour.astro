---
const props = Astro.props;
import { urlForImage } from "@/lib/urlForImage";

const xyz = props.images.imagesGallery;

let numCols;
switch (xyz.length) {
    case 1:
        numCols = 1;
        break;
    case 2:
        numCols = 1;
        break;
    case 3:
        numCols = 1;
        break;
    case 4:
        numCols = 2;
        break;
    default: // handle for images more than 4 as per requirements
        numCols = 2; 
}


---



<div class={`grid sticky top-12 md:gap-2 grid-cols-${numCols} lg:!grid-cols-${numCols}`}>
  {
    props.images.imagesGallery.map((i: any) => {
      return (
        <a
          class="glightbox group md:rounded-md md:overflow-hidden duration-300 hover:opacity-80 relative"
          href={urlForImage(i.asset).width(1300).url()}
          aria-hidden="true"
        >
          <span class="absolute group-hover:opacity-100 group-hover:scale-110 duration-300 opacity-70 right-0 bottom-0 m-3 rounded-md p-1 bg-gray-900/70 shadow-sm">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="25"
              height="25"
              viewBox="0 0 24 24"
            >
              <path
                fill="#fff"
                d="M5 19v-6h2v4h4v2H5Zm12-8V7h-4V5h6v6h-2Z"
              />
            </svg>
          </span>
          <img
            alt={i?.alt ? i.alt : ""}
            class="object-cover w-full overflow-hidden h-24 md:h-[300px]"
            src={urlForImage(i.asset).width(600).height(600).url()}
          />
        </a>
      );
    })
  }
</div>
